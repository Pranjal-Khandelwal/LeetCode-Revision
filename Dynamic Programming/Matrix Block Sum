class Solution {
public:
    int m,n;
    int extractSum(int i,int j,vector<vector<int>>&sum)
    {
        if(i<0 || j<0)
            return 0;
        if(i>=m)
            i=m-1;
        if(j>=n)
            j=n-1;
        
        return sum[i][j];
    }
    
    vector<vector<int>> matrixBlockSum(vector<vector<int>>& mat, int k) {
        m=mat.size();
        n=mat[0].size();
        
        vector<vector<int>>sum(m,vector<int>(n,0));
            
        for(int i=0;i<m;i++)
        {
            for(int j=0;j<n;j++)
            {
            sum[i][j]=extractSum(i-1,j,sum)+extractSum(i,j-1,sum)-extractSum(i-1,j-1,sum)+mat[i][j];
            }
        }
        
        vector<vector<int>>res(m,vector<int>(n,0));
        
        for(int i=0;i<m;i++)
        {
            for(int j=0;j<n;j++)
            {
                res[i][j]=extractSum(i+k,j+k,sum)-extractSum(i-k-1,j+k,sum)-extractSum(i+k,j-k-1,sum)+extractSum(i-k-1,j-k-1,sum);
            }
        }
        return res;
    
    }
};
