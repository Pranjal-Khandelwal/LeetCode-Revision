USING BFS

T.C-O(M*N)
S.C-O(M*N)

class Solution {
public:
    
    vector<vector<int>> updateMatrix(vector<vector<int>>& mat) {
        int m=mat.size();
        int n=mat[0].size();
            
        vector<vector<int>>distance(m,vector<int>(n,INT_MAX));
         queue<pair<int,int>>q;
        
        for(int i=0;i<m;i++)
        {
            for(int j=0;j<n;j++)
            {
                if(mat[i][j]==0)
                {
                    distance[i][j]=0;
                    q.push({i,j});
                }
            }
        }
        
        vector<pair<int,int>>direction{{0,1},{1,0},{0,-1},{-1,0}};
        
        while(!q.empty())
        {
            auto current=q.front();
            q.pop();
            
            int currX=current.first;
            int currY=current.second;
            
            
            
            for(auto dir:direction)
            {
                int x=currX+dir.first;
                int y=currY+dir.second;
                
            
                if(x>=0 && x<m && y>=0 && y<n)
                {
                    if(distance[x][y]>distance[currX][currY]+1){
                    distance[x][y]=distance[currX][currY]+1;
                    q.push({x,y});
                }
            }
            }
        }
        return distance;
        }
};
