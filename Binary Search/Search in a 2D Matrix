Approach-1(Brute Force)
T.C-O(N^2)
S.C-O(1)

class Solution {
public:
    bool searchMatrix(vector<vector<int>>& matrix, int target) {
        int row=matrix.size();
        int col=matrix[0].size();
        
        for(int i=0;i<row;i++)
        {
            for(int j=0;j<col;j++)
            {
                if(matrix[i][j]==target)
                    return true;
            }
        }
        return false;
    }
};

Approach-2 (Binary Search)
T.C-O(logn)
S.C-O(1)

class Solution {
public:
    bool searchMatrix(vector<vector<int>>& matrix, int target) {
        int row=matrix.size();
        int col=matrix[0].size();
        
       int  i=0;
       int j=col-1;
    
        
        while(j>=0 && i<row)
        {
            if(matrix[i][j]==target)
            {
                return true;
            }
            else if(matrix[i][j]>target){
                j--;        
            }
            else{
                i++;
            }
        
        }
        return false;
    }
};
