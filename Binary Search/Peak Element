Brute Force Solution
T.C-O(N)
S.C-O(1)

class Solution {
public:
    int findPeakElement(vector<int>& nums) {
        if(nums.size()==1)
        {
        return 0;
        }
    for(int i=0;i<nums.size();i++)
        {
        if(i==0)
            {
            if(nums[i]>nums[i+1])
            {

                return 0;
                }
        }
        else if(i==nums.size()-1)
            {
            if(nums[i]>nums[i-1]){
                return i;
                }
            }
        else if(nums[i]>nums[i-1] && nums[i]>nums[i+1])
            {
            return i;
            }
    }
    return 0;
    }
};

Binary Search 

T.C-O(log n)
S.C-O(1)

class Solution {
public:
    int findPeakElement(vector<int>& nums) {
      int low=0;
      int high=nums.size()-1;
        
        while(low<high)
        {
            int mid=low+(high-low)/2;
            
            if(nums[mid]>nums[mid+1])
                high=mid;
            else
                low=mid+1;
        }
        return low;
    }
};

