Approach-1(Spiral Matrix)
T.C-O(N)
S.C-O(1)

class Solution {
public:
    
    vector<int> spiralOrder(vector<vector<int>>& matrix) {
        int row=matrix.size();
        int col=matrix[0].size();
        
        vector<int>v;
        
        int top=0,bottom=row-1, left=0,right=col-1;
        
        int direction=1;
        
        while(left<=right && top<=bottom)
        {
            if(direction==1)
            {
                for(int i=left;i<=right;i++){
                    v.push_back(matrix[top][i]);
                }
                direction=2;
                top++;
                
}
           else if(direction==2)
            {
                for(int i=top;i<=bottom;i++){
                    v.push_back(matrix[i][right]);
                }
                direction=3; 
                right--;
                
            }
            
            else if(direction==3)
            {
                for(int i=right;i>=left;i--){
                    v.push_back(matrix[bottom][i]);
                }
                 direction=4;
                bottom--;
            }
            
            else if(direction==4)
            {
                for(int i=bottom;i>=top;i--)
                {
                    v.push_back(matrix[i][left]);
                }
                direction=1;
                left++;
            }
            
        }
        return v;
    }
};
