Approach-2(Using MinHeap)
T.C-O(NLOGN)
S.C-O(N^2)

class Compare {
public:
    bool operator()(const vector<int> &v1, const vector<int> &v2) {
        return (v1[0] * v1[0] + v1[1] * v1[1]) > (v2[0] * v2[0] + v2[1] * v2[1]);
    }
};

class Solution {
public:
    
    vector<vector<int>> kClosest(vector<vector<int>>& points, int k) {
        priority_queue<vector<int>,vector<vector<int>>,Compare>pq;
        
        for(int i=0;i<points.size();i++)
        {
            pq.push(points[i]);
        }
        vector<vector<int>>res;
        
        for(int i=0;i<k;i++)
        {
            res.push_back(pq.top());
            pq.pop();
        }
        
        return res;
        
    }
};
