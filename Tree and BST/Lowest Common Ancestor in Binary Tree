T.C-O(2^N)
S.C-O(1)

class Solution {
public:
    TreeNode* lowestCommonAncestor(TreeNode* root, TreeNode* p, TreeNode* q) {
        if(root==NULL)
            return NULL;
        
        if(!root||root==p || root==q)
            return root;
        
        TreeNode* left_lca=lowestCommonAncestor(root->left,p,q);
        TreeNode* right_lca=lowestCommonAncestor(root->right,p,q);
        
        if(right_lca && left_lca)
            return root;
        
        if(left_lca!=NULL)
            root=left_lca;
        else
            root =right_lca;
        
        return root;
    }
};
