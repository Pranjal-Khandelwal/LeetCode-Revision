Approach-1(Using Brute Force)
T.C.-O(N^3)
S.C.-O(1)

class Solution {
public:
    bool find132pattern(vector<int>& nums) {
        int n=nums.size();
        
        for(int i=0;i<n;i++)
        {
            for(int j=i+1;j<n;j++)
            {
                for(int k=j+1;k<n;k++)
                {
                    if(nums[i]<nums[k] && nums[k]<nums[j])
                        return true;
                }
            }
        }
        return false;
    }
};

Approach-2(using Stack)
T.C.-O(N)
S.C.-O(N)

class Solution {
public:
    bool find132pattern(vector<int>& nums) {
        int n=nums.size();
        
        int prev=INT_MIN;
        stack<int>st;
        
        for(int i=n-1;i>=0;i--)
        {
            if(nums[i]<prev)
                return true;
            
            while(!st.empty() && nums[i]>st.top())
            {
                prev=st.top();
                st.pop();
            }
            st.push(nums[i]);
        }
        return false;
    }
};
