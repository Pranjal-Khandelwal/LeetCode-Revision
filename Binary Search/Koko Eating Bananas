T.C.-O(NLOGN)
S.C.-O(1)

class Solution {
public:
    bool canFinishInHours(vector<int>&piles,int speed,int maxHours){
        int n=piles.size();
        long long time=0;
        
        for(int i=0;i<n;i++)
        {    
            time +=(piles[i]/speed)+(piles[i]%speed!=0);
            if(time>maxHours)
                return false;
        }
        return true;
    }
    
    int minEatingSpeed(vector<int>& piles, int h) {
        int n=piles.size();
        
        int low=1,high=*max_element(piles.begin(),piles.end());
        int res=0;
        
        while(low<=high){
            int mid=low+(high-low)/2;
            if(canFinishInHours(piles,mid,h)){
                res=mid;
                high=mid-1;
            }
            else low=mid+1;
        }
        return res;
    }
};
