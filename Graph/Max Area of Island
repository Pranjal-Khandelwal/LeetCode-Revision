APPROACH-1(USING DFS)

T.C-O(M*N)
S.C-O(M*N)


class Solution {
public:
    void dfs(vector<vector<int>>& grid,int i,int j,int &current)
    {
        int m=grid.size();
        int n=grid[0].size();
        if(i<0  || i>=m || j<0 || j>=n || grid[i][j]==0)
            return;
        
        grid[i][j]=0;
         current++;
        
        dfs(grid,i+1,j,current);
         dfs(grid,i-1,j,current);
         dfs(grid,i,j+1,current);
         dfs(grid,i,j-1,current);    
    }
    
    int maxAreaOfIsland(vector<vector<int>>& grid) {
        int m=grid.size();
        int n=grid[0].size();
        
        int maximum=0;
        
        for(int i=0;i<m;i++)
        {
            for(int j=0;j<n;j++)
            {
                if(grid[i][j]==1){
                   int current=0;
                    
                dfs(grid,i,j,current);
            
                maximum=max(maximum,current);
            }
        }
        }
            return maximum;
    }
};
