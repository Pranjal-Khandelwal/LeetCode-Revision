Approach-1(Brute Force)
T.C.-O(N^2)---TLE
S.C.-O(1)

class Solution {
public:
    int findMaxConsecutiveOnes(vector<int>& nums) {
        int n=nums.size();
        int max_len=0;
        
        for(int i=0;i<n;i++)
        {
            int len=0;
            
            for(int j=i;j<n;j++)
            {
                if(nums[j]==0)
                {
                    max_len=max(max_len,len);
                    len=0;
                }
                else{
                    len++;
                }
            }
             max_len=max(max_len,len);
        }
       return max_len;
    }
};

Approach-2(Optimized)

T.C.-O(N)
S.C.-O(1)

class Solution {
public:
    int findMaxConsecutiveOnes(vector<int>& nums) {
        int n=nums.size();
        
        int len=0;
        int max_len=0;
        
        for(int i=0;i<n;i++)
        {
            if(nums[i]==0)
            {
                max_len=max(max_len,len);
                len=0;
            }
            else{
                len++;
            }
            
        }
        return max(max_len,len);
    }
};

