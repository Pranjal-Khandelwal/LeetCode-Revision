Using Stack
T.C-O(N)
S.C-O(N)

class Solution {
public:
    bool checkValidString(string s) {
        stack<int>parenthesis;
        stack<int>asterick;
        
        for(int i=0;i<s.size();i++)
        {
            if(s[i]=='('){
            parenthesis.push(i);
            }
        if(s[i]=='*'){
            asterick.push(i);
        }
            
            if(s[i]==')')
            {
                if(!parenthesis.empty()){
                    parenthesis.pop();
                }
                
                else if(!asterick.empty()){
                    asterick.pop();
                }
                else 
                    return false; 
            }
            
        }
        while(!parenthesis.empty() && !asterick.empty() )
        {
            if(parenthesis.top()>asterick.top())
                return false;
            
                parenthesis.pop();
                asterick.pop();
            
        }
        return parenthesis.empty();
        }
};

Approach-2(Using Two Pointers)
T.C-O(N)
S.C-O(1)

lass Solution {
public:
    bool checkValidString(string s) {
        int n=s.size();
        int low=0,high=0;
        
        for(int i=0;i<n;i++)
        {
            if(s[i]=='(' || s[i]=='*'){
                low++;
            }
            else{
                low--;
            }
            
            if(s[n-i-1]==')' || s[n-i-1]=='*'){
                high++;
            }
            else{
                high--;
            }
            
            if(low<0 || high<0)
                return false;
        }
        return true;
    }
};
