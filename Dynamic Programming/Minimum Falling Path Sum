


Approach-1(Top-Down Solution)
T.C-O(N^2)
S.C-O(1)
class Solution {
public:
    int minFallingPathSum(vector<vector<int>>& matrix) {
        int row=matrix.size();
        int col=matrix[0].size();
        
        for(int i=1;i<row;i++)
        {
            for(int j=0;j<col;j++)
            {
                if(j==0)
                  matrix[i][j]+=min(matrix[i-1][j+1],matrix[i-1][j]);  
                else if(j==col-1)
                    matrix[i][j]+=min(matrix[i-1][j],matrix[i-1][j-1]);
                else
                    matrix[i][j]+=min({matrix[i-1][j+1],matrix[i-1][j],matrix[i-1][j-1]});
            }
            
        }
        int sum=INT_MAX;
        for(int j=0;j<col;j++){
            sum=min(sum,matrix[row-1][j]);
        }
        return sum;
    }
};
