Approach-1(Brute Force)

class Solution {
public:
    vector<vector<int>> merge(vector<vector<int>>& intervals) {
         int n=intervals.size();
        if(n<=1)
            return intervals;
        
        sort(intervals.begin(),intervals.end()); 
        
        vector<vector<int>> res;
        
        for(int i=0;i<n;i++){
            int a=intervals[i][0];
            int b=intervals[i][1];
           
            for(int j=i+1;j<n;j++){
                int c=intervals[j][0];
                int d=intervals[j][1];
                
                if(b>=c){ 
                    b=max(b,d);
                    
                    i=j;
                }
            } 
            res.push_back({a,b});
        }
        return res;
    }
};



class Solution {
public:
    vector<vector<int>> merge(vector<vector<int>>& intervals) {
        int n=intervals.size();
        vector<vector<int>>res;
        
        if(intervals.size()==0)
            return res;
        
        sort(intervals.begin(),intervals.end());
        
        int prev=0;
        
        res.push_back(intervals[0]);
        
        for(int curr=1;curr<n;curr++)
        {
            if(intervals[curr][0]<=res[prev][1])
            {
               res[prev][1]=max(res[prev][1],intervals[curr][1]);
            }
            else{
                prev++;
                res.push_back(intervals[curr]);
            }
        }
        return res;
    }
    
};
