Approach-1(Brute Force)
T.C.-O(N)
S.C.-O(1)

class Solution {
public:
    int findMin(vector<int>& nums) {
        int n=nums.size();
        
        int mini=INT_MAX;
        
        for(int i=0;i<n;i++)
        {
            mini=min(mini,nums[i]);
        }
        return mini;
    }
};


Approach-2(using Binary Search)
T.C.-O(logN)
S.C.-O(1)

class Solution {
public:
    int findMin(vector<int>& nums) {
        int n=nums.size()-1;
        
        if (n== 1) {
      return nums[0];
    }
        int low=0,high=n-1;
        
        
        if(nums[high]>nums[0])
            return nums[0];
        
        while(low<=high)
        {
            int mid=low+(high-low)/2;
            
            
            
            if(nums[mid]>nums[mid+1])
            {
                return nums[mid+1];
            }
            if(nums[mid-1]>nums[mid])
            {
                return nums[mid];
            }
            
            if(nums[mid]>nums[0])
            {
                low=mid+1;
            }
            else{
                right=mid-1;
            }
        }
        return -1;
    }
};
